  An example:

    lotro:hobbits:
      isengard:
        bash?:  fgrep isengard /srv/lotro/hobbits/$1
        bash!:  cat isengard /srv/lotro/hobbits/$1

    # The task lotro:hobbits:isengard checks to if the hobbit argument is in
    # Isengard. If not, it moves it there.

  Here we use bash? to indicate a test in Bash and bash! to indicate an action
  in Bash. Let's try again, using another task we have defined:

    lotro:hobbits:
      isengard:
        tasks: - [set_content, [/srv/lotro/hobbits/$1], isengard]

    # The task lotro:hobbits:isengard is a trivial application of set_content.

  In this example, we pass an arg from one task to another, altering it as we
  go. This is a case where we need string expressions. An array in a string
  context (as here) indicates a string expression. String expressions -- how
  do they work? The easiest way to get them is just to have Bash perform them
  but this will obviously lead to some weird stuff.

  Are string expressions necessary for a commpiler? They are crucial for
  people who have to write the stuff.

